{
	"name": "dataflow1join0dataset0filtered",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataflowsource1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "source2filtered",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataflowdestination",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          anime_id as string,",
				"          Name as string,",
				"          {English name} as string,",
				"          {Other name} as string,",
				"          Score as string,",
				"          Genres as string,",
				"          Synopsis as string,",
				"          Type as string,",
				"          Episodes as string,",
				"          Aired as string,",
				"          Premiered as string,",
				"          Status as string,",
				"          Producers as string,",
				"          Licensors as string,",
				"          Studios as string,",
				"          Source as string,",
				"          Duration as string,",
				"          Rating as string,",
				"          Rank as string,",
				"          Popularity as string,",
				"          Favorites as string,",
				"          {Scored By} as string,",
				"          Members as string,",
				"          {Image URL} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          anime_id as string,",
				"          Name as string,",
				"          Score as string,",
				"          Genres as string,",
				"          {English name} as string,",
				"          {Japanese name} as string,",
				"          sypnopsis as string,",
				"          Type as string,",
				"          Episodes as string,",
				"          Aired as string,",
				"          Premiered as string,",
				"          Producers as string,",
				"          Licensors as string,",
				"          Studios as string,",
				"          Source as string,",
				"          Duration as string,",
				"          Rating as string,",
				"          Ranked as string,",
				"          Popularity as string,",
				"          Members as string,",
				"          Favorites as string,",
				"          Watching as string,",
				"          Completed as string,",
				"          {On-Hold} as string,",
				"          Dropped as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@anime_id == source2@anime_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          anime_id = source1@anime_id,",
				"          Name = source1@Name,",
				"          Score = source1@Score,",
				"          Producers = source1@Producers,",
				"          Studios = source1@Studios,",
				"          Duration = source1@Duration,",
				"          Rating = source1@Rating,",
				"          Rank",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}